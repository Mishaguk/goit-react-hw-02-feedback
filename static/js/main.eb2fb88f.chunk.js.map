{"version":3,"sources":["components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","isOpen","percentage","ropTypes","PropTypes","number","isRequired","bool","Notification","message","App","state","handleGood","setState","countTotalFeedback","countPositiveFeedbackPercentage","handleNeutral","handleBad","this","type","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"4KAGMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,OAAQC,EAAtC,EAAsCA,WAAtC,OAClB,8BACED,EACA,gCACC,2CAAcJ,KACd,uBACA,8CAAiBC,KACjB,uBACA,0CAAaC,KACb,uBACA,4CAAeC,KACf,uBACW,IAAVA,EACA,4DAEA,wDAA2BE,EAA3B,UAIF,sDAKHN,EAAWO,SAAW,CACrBN,KAAMO,IAAUC,OAAOC,WACvBR,QAASM,IAAUC,OAAOC,WAC1BP,IAAKK,IAAUC,OAAOC,WACtBN,MAAOI,IAAUC,OAAOC,WACxBJ,WAAYE,IAAUC,OAAOC,WAC7BL,OAAQG,IAAUG,KAAKD,YAGTV,QChCAY,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,oBAAIA,QAASA,EAAb,SAAuBA,KCExCC,E,4MACpBC,MAAQ,CACPd,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPE,WAAY,IACZD,QAAQ,G,EAeTW,WAAa,WACZ,EAAKC,SAAS,CAAEZ,QAAQ,IACxB,EAAKY,UAAS,SAAAF,GAAK,MAAK,CACvBd,KAAMc,EAAMd,KAAO,MAEpB,EAAKiB,qBACL,EAAKC,mC,EAENC,cAAgB,WACf,EAAKH,SAAS,CAAEZ,QAAQ,IACxB,EAAKY,UAAS,SAAAF,GAAK,MAAK,CACvBb,QAASa,EAAMb,QAAU,MAE1B,EAAKgB,qBACL,EAAKC,mC,EAGNE,UAAY,WACX,EAAKJ,SAAS,CAAEZ,QAAQ,IACxB,EAAKY,UAAS,SAAAF,GAAK,MAAK,CACvBZ,IAAKY,EAAMZ,IAAM,MAElB,EAAKe,qBACL,EAAKC,mC,wDAnCN,WACCG,KAAKL,UAAS,SAAAF,GAAK,MAAK,CACvBX,MAAOW,EAAMd,KAAOc,EAAMb,QAAUa,EAAMZ,U,6CAI5C,WACCmB,KAAKL,UAAS,SAAAF,GAAK,MAAK,CACvBT,WAAa,KAAOS,EAAMd,KAAOc,EAAMZ,IAAMY,EAAMb,SAAYa,EAAMd,W,oBA8BvE,WACC,MAA0DqB,KAAKP,MAAvDd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKE,EAA5B,EAA4BA,OAAQD,EAApC,EAAoCA,MAAOE,EAA3C,EAA2CA,WAE3C,OACC,gCACC,uDACA,wBAAQiB,KAAK,SAASC,QAASF,KAAKN,WAApC,kBAGA,wBAAQO,KAAK,SAASC,QAASF,KAAKF,cAApC,qBAGA,wBAAQG,KAAK,SAASC,QAASF,KAAKD,UAApC,iBAIA,4CAEChB,EACA,cAAC,EAAD,CACCJ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPE,WAAYA,EACZD,OAAQA,IAGT,cAAC,EAAD,CAAcQ,QAAQ,6B,GA5EMY,aCAjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eb2fb88f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, isOpen, percentage }) => (\r\n\t<div>\r\n\t\t{isOpen ? (\r\n\t\t\t<div>\r\n\t\t\t\t<span>Good : {good}</span>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<span>Neutral : {neutral}</span>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<span>Bad : {bad}</span>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<span>Total : {total}</span>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{total === 1 ? (\r\n\t\t\t\t\t<span>Positive feedback : 100%</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<span>Positive feedback : {percentage}%</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t) : (\r\n\t\t\t<h3>No feedback given</h3>\r\n\t\t)}\r\n\t</div>\r\n);\r\n\r\nStatistics.ropTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpercentage: PropTypes.number.isRequired,\r\n\tisOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <h3 message={message}>{message}</h3>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tgood: 0,\r\n\t\tneutral: 0,\r\n\t\tbad: 0,\r\n\t\ttotal: 0,\r\n\t\tpercentage: 100,\r\n\t\tisOpen: false,\r\n\t};\r\n\r\n\tcountTotalFeedback() {\r\n\t\tthis.setState(state => ({\r\n\t\t\ttotal: state.good + state.neutral + state.bad,\r\n\t\t}));\r\n\t}\r\n\r\n\tcountPositiveFeedbackPercentage() {\r\n\t\tthis.setState(state => ({\r\n\t\t\tpercentage: (100 / (state.good + state.bad + state.neutral)) * state.good,\r\n\t\t}));\r\n\t}\r\n\r\n\thandleGood = () => {\r\n\t\tthis.setState({ isOpen: true });\r\n\t\tthis.setState(state => ({\r\n\t\t\tgood: state.good + 1,\r\n\t\t}));\r\n\t\tthis.countTotalFeedback();\r\n\t\tthis.countPositiveFeedbackPercentage();\r\n\t};\r\n\thandleNeutral = () => {\r\n\t\tthis.setState({ isOpen: true });\r\n\t\tthis.setState(state => ({\r\n\t\t\tneutral: state.neutral + 1,\r\n\t\t}));\r\n\t\tthis.countTotalFeedback();\r\n\t\tthis.countPositiveFeedbackPercentage();\r\n\t};\r\n\r\n\thandleBad = () => {\r\n\t\tthis.setState({ isOpen: true });\r\n\t\tthis.setState(state => ({\r\n\t\t\tbad: state.bad + 1,\r\n\t\t}));\r\n\t\tthis.countTotalFeedback();\r\n\t\tthis.countPositiveFeedbackPercentage();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { good, neutral, bad, isOpen, total, percentage } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Please leave feedback</h2>\r\n\t\t\t\t<button type='button' onClick={this.handleGood}>\r\n\t\t\t\t\tGood\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type='button' onClick={this.handleNeutral}>\r\n\t\t\t\t\tNeutral\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type='button' onClick={this.handleBad}>\r\n\t\t\t\t\tBad\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<h2>Statistics</h2>\r\n\r\n\t\t\t\t{isOpen ? (\r\n\t\t\t\t\t<Statistics\r\n\t\t\t\t\t\tgood={good}\r\n\t\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\t\tbad={bad}\r\n\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\tpercentage={percentage}\r\n\t\t\t\t\t\tisOpen={isOpen}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Notification message='No feedback given' />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// \t<div>\r\n// \t\t<Feedback />\r\n// \t</div>\r\n// );\r\n// export default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}